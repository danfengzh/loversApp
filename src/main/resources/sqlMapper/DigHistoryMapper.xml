<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.DigHistoryMapper">
  <!--<cache type="org.loversAPP.Cache.RedisCache"/>-->
  <resultMap id="BaseResultMap" type="org.loversAPP.model.DigHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="digUserID" jdbcType="INTEGER" property="diguserid" />
    <result column="treasureCode" jdbcType="INTEGER" property="treasurecode" />
    <result column="digTime" jdbcType="TIMESTAMP" property="digtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, digUserID, treasureCode, digTime
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.DigHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dig_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dig_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dig_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.DigHistoryExample">
    delete from dig_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.DigHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dig_history (digUserID, treasureCode, digTime
      )
    values (#{diguserid,jdbcType=INTEGER}, #{treasurecode,jdbcType=INTEGER}, #{digtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.DigHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dig_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="diguserid != null">
        digUserID,
      </if>
      <if test="treasurecode != null">
        treasureCode,
      </if>
      <if test="digtime != null">
        digTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="diguserid != null">
        #{diguserid,jdbcType=INTEGER},
      </if>
      <if test="treasurecode != null">
        #{treasurecode,jdbcType=INTEGER},
      </if>
      <if test="digtime != null">
        #{digtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.DigHistoryExample" resultType="java.lang.Long">
    select count(*) from dig_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dig_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.diguserid != null">
        digUserID = #{record.diguserid,jdbcType=INTEGER},
      </if>
      <if test="record.treasurecode != null">
        treasureCode = #{record.treasurecode,jdbcType=INTEGER},
      </if>
      <if test="record.digtime != null">
        digTime = #{record.digtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dig_history
    set id = #{record.id,jdbcType=INTEGER},
      digUserID = #{record.diguserid,jdbcType=INTEGER},
      treasureCode = #{record.treasurecode,jdbcType=INTEGER},
      digTime = #{record.digtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.DigHistory">
    update dig_history
    <set>
      <if test="diguserid != null">
        digUserID = #{diguserid,jdbcType=INTEGER},
      </if>
      <if test="treasurecode != null">
        treasureCode = #{treasurecode,jdbcType=INTEGER},
      </if>
      <if test="digtime != null">
        digTime = #{digtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.DigHistory">
    update dig_history
    set digUserID = #{diguserid,jdbcType=INTEGER},
      treasureCode = #{treasurecode,jdbcType=INTEGER},
      digTime = #{digtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>