<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.MomentMapper">
  <cache type="org.loversAPP.Cache.RedisCache"/>
  <resultMap id="BaseResultMap" type="org.loversAPP.model.Moment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="momentType" jdbcType="INTEGER" property="momenttype" />
    <result column="momentContent" jdbcType="VARCHAR" property="momentcontent" />
    <result column="momentImage" jdbcType="VARCHAR" property="momentimage" />
    <result column="momentDate" jdbcType="TIMESTAMP" property="momentdate" />
    <result column="commentID" jdbcType="INTEGER" property="commentid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userID, momentType, momentContent, momentImage, momentDate, commentID
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.MomentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from moment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from moment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from moment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.MomentExample">
    delete from moment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.Moment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into moment (userID, momentType, momentContent,
    momentImage, momentDate, commentID
    )
    values (#{userid,jdbcType=INTEGER}, #{momenttype,jdbcType=INTEGER}, #{momentcontent,jdbcType=VARCHAR},
    #{momentimage,jdbcType=VARCHAR}, #{momentdate,jdbcType=TIMESTAMP}, #{commentid,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.Moment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into moment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="momenttype != null">
        momentType,
      </if>
      <if test="momentcontent != null">
        momentContent,
      </if>
      <if test="momentimage != null">
        momentImage,
      </if>
      <if test="momentdate != null">
        momentDate,
      </if>
      <if test="commentid != null">
        commentID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="momenttype != null">
        #{momenttype,jdbcType=INTEGER},
      </if>
      <if test="momentcontent != null">
        #{momentcontent,jdbcType=VARCHAR},
      </if>
      <if test="momentimage != null">
        #{momentimage,jdbcType=VARCHAR},
      </if>
      <if test="momentdate != null">
        #{momentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.MomentExample" resultType="java.lang.Long">
    select count(*) from moment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByUserid" resultType="org.loversAPP.model.Moment">
  SELECT
moment.id,
moment.userID,
moment.momentType,
moment.momentContent,
moment.momentImage,
moment.momentDate,
moment.commentID,
`user`.userName,
`user`.avator
FROM
moment ,
`user`
WHERE
moment.userID = #{userID} AND
moment.userID = `user`.id
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update moment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.momenttype != null">
        momentType = #{record.momenttype,jdbcType=INTEGER},
      </if>
      <if test="record.momentcontent != null">
        momentContent = #{record.momentcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.momentimage != null">
        momentImage = #{record.momentimage,jdbcType=VARCHAR},
      </if>
      <if test="record.momentdate != null">
        momentDate = #{record.momentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentid != null">
        commentID = #{record.commentid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update moment
    set id = #{record.id,jdbcType=INTEGER},
    userID = #{record.userid,jdbcType=INTEGER},
    momentType = #{record.momenttype,jdbcType=INTEGER},
    momentContent = #{record.momentcontent,jdbcType=VARCHAR},
    momentImage = #{record.momentimage,jdbcType=VARCHAR},
    momentDate = #{record.momentdate,jdbcType=TIMESTAMP},
    commentID = #{record.commentid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.Moment">
    update moment
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="momenttype != null">
        momentType = #{momenttype,jdbcType=INTEGER},
      </if>
      <if test="momentcontent != null">
        momentContent = #{momentcontent,jdbcType=VARCHAR},
      </if>
      <if test="momentimage != null">
        momentImage = #{momentimage,jdbcType=VARCHAR},
      </if>
      <if test="momentdate != null">
        momentDate = #{momentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentid != null">
        commentID = #{commentid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.Moment">
    update moment
    set userID = #{userid,jdbcType=INTEGER},
      momentType = #{momenttype,jdbcType=INTEGER},
      momentContent = #{momentcontent,jdbcType=VARCHAR},
      momentImage = #{momentimage,jdbcType=VARCHAR},
      momentDate = #{momentdate,jdbcType=TIMESTAMP},
      commentID = #{commentid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>