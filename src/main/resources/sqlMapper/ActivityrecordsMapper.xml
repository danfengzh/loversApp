<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.ActivityrecordsMapper">
  <resultMap id="BaseResultMap" type="org.loversAPP.model.Activityrecords">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="loverID" jdbcType="VARCHAR" property="loverid" />
    <result column="totalSteps" jdbcType="INTEGER" property="totalsteps" />
    <result column="Area" jdbcType="DOUBLE" property="area" />
    <result column="longtitude" jdbcType="DECIMAL" property="longtitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loverID, totalSteps, Area, longtitude, latitude
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.ActivityrecordsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activityrecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activityrecords
    where id = #{id,jdbcType=INTEGER}
      and loverID = #{loverid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from activityrecords
    where id = #{id,jdbcType=INTEGER}
      and loverID = #{loverid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.ActivityrecordsExample">
    delete from activityrecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.Activityrecords">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activityrecords (loverID, totalSteps, Area, 
      longtitude, latitude)
    values (#{loverid,jdbcType=VARCHAR}, #{totalsteps,jdbcType=INTEGER}, #{area,jdbcType=DOUBLE}, 
      #{longtitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.Activityrecords">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activityrecords
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loverid != null">
        loverID,
      </if>
      <if test="totalsteps != null">
        totalSteps,
      </if>
      <if test="area != null">
        Area,
      </if>
      <if test="longtitude != null">
        longtitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loverid != null">
        #{loverid,jdbcType=VARCHAR},
      </if>
      <if test="totalsteps != null">
        #{totalsteps,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=DOUBLE},
      </if>
      <if test="longtitude != null">
        #{longtitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.ActivityrecordsExample" resultType="java.lang.Long">
    select count(*) from activityrecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activityrecords
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loverid != null">
        loverID = #{record.loverid,jdbcType=VARCHAR},
      </if>
      <if test="record.totalsteps != null">
        totalSteps = #{record.totalsteps,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        Area = #{record.area,jdbcType=DOUBLE},
      </if>
      <if test="record.longtitude != null">
        longtitude = #{record.longtitude,jdbcType=DECIMAL},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activityrecords
    set id = #{record.id,jdbcType=INTEGER},
      loverID = #{record.loverid,jdbcType=VARCHAR},
      totalSteps = #{record.totalsteps,jdbcType=INTEGER},
      Area = #{record.area,jdbcType=DOUBLE},
      longtitude = #{record.longtitude,jdbcType=DECIMAL},
      latitude = #{record.latitude,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.Activityrecords">
    update activityrecords
    <set>
      <if test="totalsteps != null">
        totalSteps = #{totalsteps,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        Area = #{area,jdbcType=DOUBLE},
      </if>
      <if test="longtitude != null">
        longtitude = #{longtitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and loverID = #{loverid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.Activityrecords">
    update activityrecords
    set totalSteps = #{totalsteps,jdbcType=INTEGER},
      Area = #{area,jdbcType=DOUBLE},
      longtitude = #{longtitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
      and loverID = #{loverid,jdbcType=VARCHAR}
  </update>
</mapper>