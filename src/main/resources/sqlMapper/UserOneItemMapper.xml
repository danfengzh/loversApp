<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.UserOneItemMapper">
  <cache type="org.loversAPP.Cache.RedisCache"/>
  <resultMap id="BaseResultMap" type="org.loversAPP.model.UserOneItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="itemID" jdbcType="INTEGER" property="itemid" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, itemID, userID
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.UserOneItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_one_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_one_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_one_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.UserOneItemExample">
    delete from user_one_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.UserOneItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_one_item (itemID, userID)
    values (#{itemid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.UserOneItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_one_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        itemID,
      </if>
      <if test="userid != null">
        userID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <insert id="inserBathUserOneItem">
      INSERT user_one_item(itemID,userID)
      VALUES
      <foreach collection="userItems" item="item" separator=",">
        (#{item.itemid},#{item.userid})
      </foreach>
    </insert>
  <insert id="insertIntoUserOneItem">
    INSERT user_one_item(itemID,userID) VALUES(#{userOneItem.itemid},#{userOneItem.userid})
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.UserOneItemExample" resultType="java.lang.Long">
    select count(*) from user_one_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="maxIDu" resultType="java.lang.Integer">
    SELECT  IFNULL(max(id),0)
FROM `user_one_item`
WHERE
user_one_item.userID =#{userid}
and user_one_item.itemID=#{itemID}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_one_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.itemid != null">
        itemID = #{record.itemid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_one_item
    set id = #{record.id,jdbcType=INTEGER},
      itemID = #{record.itemid,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.UserOneItem">
    update user_one_item
    <set>
      <if test="itemid != null">
        itemID = #{itemid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.UserOneItem">
    update user_one_item
    set itemID = #{itemid,jdbcType=INTEGER},
      userID = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>