<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.LoverCapsuleMapper">
  <!--<cache type="org.loversAPP.Cache.RedisCache"/>-->
  <resultMap id="BaseResultMap" type="org.loversAPP.model.LoverCapsule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="receiverID" jdbcType="INTEGER" property="receiverid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="openDay" jdbcType="TIMESTAMP" property="openday" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="itemID" jdbcType="INTEGER" property="itemid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, receiverID, userId, openDay, content, photo, state, itemID
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.LoverCapsuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from love_capsule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from love_capsule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from love_capsule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.LoverCapsuleExample">
    delete from love_capsule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.LoverCapsule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into love_capsule (receiverID, userId, openDay, 
      content, photo, state, 
      itemID)
    values (#{receiverid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{openday,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{itemid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.LoverCapsule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into love_capsule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiverid != null">
        receiverID,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="openday != null">
        openDay,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="itemid != null">
        itemID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiverid != null">
        #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="openday != null">
        #{openday,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.LoverCapsuleExample" resultType="java.lang.Long">
    select count(*) from love_capsule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update love_capsule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.receiverid != null">
        receiverID = #{record.receiverid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.openday != null">
        openDay = #{record.openday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.itemid != null">
        itemID = #{record.itemid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update love_capsule
    set id = #{record.id,jdbcType=INTEGER},
      receiverID = #{record.receiverid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      openDay = #{record.openday,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      itemID = #{record.itemid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.LoverCapsule">
    update love_capsule
    set userItemID = #{useritemid,jdbcType=INTEGER},
    openDay = #{openday,jdbcType=VARCHAR},
    userID = #{userid,jdbcType=INTEGER},
    content = #{content,jdbcType=VARCHAR},
    photo = #{photo,jdbcType=VARCHAR},
    state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="setStateByID">
    UPDATE love_capsule
    SET state=#{state}
    WHERE id=#{id}
  </update>
  <select id="getCaspule" resultMap="BaseResultMap">
    SELECT * from love_capsule
  </select>
  <select id="getLoverCasuleStateBy" resultType="java.lang.String">
         SELECT
love_capsule.state
FROM `love_capsule`
WHERE
love_capsule.receiverID=#{receiverID}
  </select>
  <select id="getLoverCasuleByRecID" resultMap="BaseResultMap">
    SELECT
love_capsule.state,
love_capsule.id,
love_capsule.receiverID,
love_capsule.userId,
love_capsule.openDay,
love_capsule.content,
love_capsule.photo,
love_capsule.itemID
FROM `love_capsule`
WHERE
love_capsule.receiverID=#{receiverID}
  </select>
  <select id="getAllCanOpenLoverCasules" resultMap="BaseResultMap">
    SELECT
love_capsule.receiverID,
love_capsule.id,
love_capsule.userId,
love_capsule.openDay,
love_capsule.content,
love_capsule.photo,
love_capsule.state,
love_capsule.itemID
FROM
love_capsule
WHERE
love_capsule.receiverID=#{receiverID} AND
love_capsule.state='2'
  </select>
  <select id="getMaxId" resultType="java.lang.Integer">
    SELECT max(id) FROM `love_capsule`;
  </select>
</mapper>