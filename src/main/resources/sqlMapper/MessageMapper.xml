<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.MessageMapper">
  <cache type="org.loversAPP.Cache.RedisCache"/>
  <resultMap id="BaseResultMap" type="org.loversAPP.model.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="msgType" jdbcType="VARCHAR" property="msgtype" />
    <result column="msgDate" jdbcType="TIMESTAMP" property="msgdate" />
    <result column="msgContent" jdbcType="VARCHAR" property="msgcontent" />
    <result column="receiverID" jdbcType="INTEGER" property="receiverid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userID, msgType, msgDate, msgContent, receiverID
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.Message">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message (userID, msgType, msgDate,
    msgContent, receiverID)
    values (#{userid,jdbcType=INTEGER}, #{msgtype,jdbcType=VARCHAR}, #{msgdate,jdbcType=TIMESTAMP},
    #{msgcontent,jdbcType=VARCHAR}, #{receiverid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.Message">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="msgtype != null">
        msgType,
      </if>
      <if test="msgdate != null">
        msgDate,
      </if>
      <if test="msgcontent != null">
        msgContent,
      </if>
      <if test="receiverid != null">
        receiverID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="msgtype != null">
        #{msgtype,jdbcType=VARCHAR},
      </if>
      <if test="msgdate != null">
        #{msgdate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgcontent != null">
        #{msgcontent,jdbcType=VARCHAR},
      </if>
      <if test="receiverid != null">
        #{receiverid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.msgtype != null">
        msgType = #{record.msgtype,jdbcType=VARCHAR},
      </if>
      <if test="record.msgdate != null">
        msgDate = #{record.msgdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.msgcontent != null">
        msgContent = #{record.msgcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverid != null">
        receiverID = #{record.receiverid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set id = #{record.id,jdbcType=INTEGER},
    userID = #{record.userid,jdbcType=INTEGER},
    msgType = #{record.msgtype,jdbcType=VARCHAR},
    msgDate = #{record.msgdate,jdbcType=TIMESTAMP},
    msgContent = #{record.msgcontent,jdbcType=VARCHAR},
    receiverID = #{record.receiverid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.Message">
    update message
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="msgtype != null">
        msgType = #{msgtype,jdbcType=VARCHAR},
      </if>
      <if test="msgdate != null">
        msgDate = #{msgdate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgcontent != null">
        msgContent = #{msgcontent,jdbcType=VARCHAR},
      </if>
      <if test="receiverid != null">
        receiverID = #{receiverid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.Message">
    update message
    set userID = #{userid,jdbcType=INTEGER},
      msgType = #{msgtype,jdbcType=VARCHAR},
      msgDate = #{msgdate,jdbcType=TIMESTAMP},
      msgContent = #{msgcontent,jdbcType=VARCHAR},
      receiverID = #{receiverid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="setReadByMID">
    UPDATE message_read
    SET isRead=1
    WHERE messageID=#{messageID}
  </update>
  <update id="setAllReadByRID">
    UPDATE message_read
    SET isRead=1
    WHERE recieverID=#{recieverID}
  </update>
  <resultMap id="UserMessageMap" type="org.loversAPP.DTO.UserMessage" extends="BaseResultMap">
    <result column="userID" property="user.id"/>
    <result column="userName" property="user.username"/>
    <result column="avator" property="user.avator"/>
    <result column="isRead" property="isRead"/>
  </resultMap>
  <select id="getUserMessageByID" resultMap="UserMessageMap">
   SELECT
   message_read.isRead,
message.id,
message.userID,
message.msgType,
message.msgDate,
message.msgContent,
message.receiverID,
`user`.userName,
`user`.avator
FROM
message ,
`user`,
message_read
WHERE
message.userID =#{userID} AND
message.receiverID = `user`.id
and message_read.messageID = message.id

  </select>
  <select id="getUserMessageByRecID" resultMap="UserMessageMap">
    SELECT
     message_read.isRead,
message.id,
message.userID,
message.msgType,
message.msgDate,
message.msgContent,
message.receiverID,
`user`.userName,
`user`.avator
FROM
message ,
`user`,
message_read
WHERE
message.receiverID = #{recID} AND
message.userID = `user`.id
and message_read.messageID = message.id
ORDER BY
message.msgDate DESC
  </select>
  <select id="getUnreadCountByRID" resultType="java.lang.Integer">
    SELECT COUNT(*)
FROM
message_read
WHERE
message_read.recieverID=#{recieverID} AND
message_read.isRead=0

  </select>
  <select id="getMaxIDbyUserid" resultType="java.lang.Integer">
    SELECT
max(id)
FROM `message`
  </select>
</mapper>