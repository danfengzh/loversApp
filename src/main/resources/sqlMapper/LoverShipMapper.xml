<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.loversAPP.dao.LoverShipMapper">
  <resultMap id="BaseResultMap" type="org.loversAPP.model.LoverShip">
    <id column="loverGirlID" jdbcType="INTEGER" property="lovergirlid" />
    <id column="loverBoyID" jdbcType="INTEGER" property="loverboyid" />
    <result column="loveTime" jdbcType="TIMESTAMP" property="lovetime" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="loverID" jdbcType="VARCHAR" property="loverid" />
    <result column="checkinDays" jdbcType="INTEGER" property="checkindays" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    loverGirlID, loverBoyID, loveTime, state, loverID, checkinDays
  </sql>
  <select id="selectByExample" parameterType="org.loversAPP.model.LoverShipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lover_ship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="org.loversAPP.model.LoverShipKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lover_ship
    where loverGirlID = #{lovergirlid,jdbcType=INTEGER}
      and loverBoyID = #{loverboyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="org.loversAPP.model.LoverShipKey">
    delete from lover_ship
    where loverGirlID = #{lovergirlid,jdbcType=INTEGER}
      and loverBoyID = #{loverboyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.loversAPP.model.LoverShipExample">
    delete from lover_ship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.loversAPP.model.LoverShip">
    insert into lover_ship (loverGirlID, loverBoyID, loveTime, 
      state, loverID, checkinDays
      )
    values (#{lovergirlid,jdbcType=INTEGER}, #{loverboyid,jdbcType=INTEGER}, #{lovetime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=CHAR}, #{loverid,jdbcType=VARCHAR}, #{checkindays,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.loversAPP.model.LoverShip">
    insert into lover_ship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lovergirlid != null">
        loverGirlID,
      </if>
      <if test="loverboyid != null">
        loverBoyID,
      </if>
      <if test="lovetime != null">
        loveTime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="loverid != null">
        loverID,
      </if>
      <if test="checkindays != null">
        checkinDays,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lovergirlid != null">
        #{lovergirlid,jdbcType=INTEGER},
      </if>
      <if test="loverboyid != null">
        #{loverboyid,jdbcType=INTEGER},
      </if>
      <if test="lovetime != null">
        #{lovetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="loverid != null">
        #{loverid,jdbcType=VARCHAR},
      </if>
      <if test="checkindays != null">
        #{checkindays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.loversAPP.model.LoverShipExample" resultType="java.lang.Long">
    select count(*) from lover_ship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lover_ship
    <set>
      <if test="record.lovergirlid != null">
        loverGirlID = #{record.lovergirlid,jdbcType=INTEGER},
      </if>
      <if test="record.loverboyid != null">
        loverBoyID = #{record.loverboyid,jdbcType=INTEGER},
      </if>
      <if test="record.lovetime != null">
        loveTime = #{record.lovetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.loverid != null">
        loverID = #{record.loverid,jdbcType=VARCHAR},
      </if>
      <if test="record.checkindays != null">
        checkinDays = #{record.checkindays,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lover_ship
    set loverGirlID = #{record.lovergirlid,jdbcType=INTEGER},
      loverBoyID = #{record.loverboyid,jdbcType=INTEGER},
      loveTime = #{record.lovetime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=CHAR},
      loverID = #{record.loverid,jdbcType=VARCHAR},
      checkinDays = #{record.checkindays,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.loversAPP.model.LoverShip">
    update lover_ship
    <set>
      <if test="lovetime != null">
        loveTime = #{lovetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="loverid != null">
        loverID = #{loverid,jdbcType=VARCHAR},
      </if>
      <if test="checkindays != null">
        checkinDays = #{checkindays,jdbcType=INTEGER},
      </if>
    </set>
    where loverGirlID = #{lovergirlid,jdbcType=INTEGER}
      and loverBoyID = #{loverboyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.loversAPP.model.LoverShip">
    update lover_ship
    set loveTime = #{lovetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR},
      loverID = #{loverid,jdbcType=VARCHAR},
      checkinDays = #{checkindays,jdbcType=INTEGER}
    where loverGirlID = #{lovergirlid,jdbcType=INTEGER}
      and loverBoyID = #{loverboyid,jdbcType=INTEGER}
  </update>
</mapper>